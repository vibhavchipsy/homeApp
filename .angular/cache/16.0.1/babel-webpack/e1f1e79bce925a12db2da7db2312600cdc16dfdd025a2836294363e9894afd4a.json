{"ast":null,"code":"import _asyncToGenerator from \"/home/sandeep/Desktop/ANGULAR/home-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nclass HousingService {\n  constructor() {\n    this.url = 'http://localhost:3000/locations';\n  }\n  getAllHousingLocations() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.housingLocationList;\n    })();\n  }\n  getHousingLocationById(id) {\n    return this.housingLocationList.find(housingLocation => housingLocation.id === id);\n  }\n}\nHousingService.ɵfac = function HousingService_Factory(t) {\n  return new (t || HousingService)();\n};\nHousingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HousingService,\n  factory: HousingService.ɵfac,\n  providedIn: 'root'\n});\nexport { HousingService };","map":{"version":3,"mappings":";;AAGA,MAGaA,cAAc;EAGzBC,YAAA;IAFA,KAAAC,GAAG,GAAG,iCAAiC;EAEvB;EAEVC,sBAAsBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B,OAAOD,KAAI,CAACE,mBAAmB;IAAC;EAClC;EAEAC,sBAAsBA,CAACC,EAAU;IAC/B,OAAO,IAAI,CAACF,mBAAmB,CAACG,IAAI,CAACC,eAAe,IAAIA,eAAe,CAACF,EAAE,KAAKA,EAAE,CAAC;EACpF;;AAXWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAW,OAAA,EAAdX,cAAc,CAAAY,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPb,cAAc","names":["HousingService","constructor","url","getAllHousingLocations","_this","_asyncToGenerator","housingLocationList","getHousingLocationById","id","find","housingLocation","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["/home/sandeep/Desktop/ANGULAR/home-app/src/app/housing.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HousingLocation } from './housing-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService {\n  url = 'http://localhost:3000/locations'\n\n  constructor() { }\n\n  async getAllHousingLocations(): Promise<HousingLocation[]> {\n    return this.housingLocationList;\n  }\n\n  getHousingLocationById(id: Number): HousingLocation | undefined {\n    return this.housingLocationList.find(housingLocation => housingLocation.id === id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}